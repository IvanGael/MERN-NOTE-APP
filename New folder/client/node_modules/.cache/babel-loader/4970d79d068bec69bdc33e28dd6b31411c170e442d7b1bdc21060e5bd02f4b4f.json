{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Bureau\\\\Mes projets\\\\React\\\\MERN-NOTE-APP-FINAL\\\\New folder\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./style\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentSection = _ref => {\n  _s();\n  var _user$result;\n  let {\n    post\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState(\"\");\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const commentsRef = useRef();\n  const handleComment = async () => {\n    const finalComment = `${user.result.name} : ${comment}`;\n    const newComment = await dispatch(commentPost(finalComment, post._id));\n    setComment(\"\");\n    setComments(newComment);\n    // scroll down\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comentsOuterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.comentsInnerContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\" \", c.split(\": \")[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), c.split(\":\")[1]]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: commentsRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"70%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: \"Write a Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            rows: 4,\n            variant: \"outlined\",\n            label: \"Comment\",\n            multiline: true,\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: \"10px\"\n            },\n            color: \"primary\",\n            fullWidth: true,\n            disabled: !comment,\n            variant: \"contained\",\n            onClick: handleComment,\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CommentSection, \"/0hpssO8SV4nxLlgdE3KyoS0LW0=\", false, function () {\n  return [useStyles, useDispatch];\n});\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["Button","TextField","Typography","React","useState","useRef","useDispatch","commentPost","useStyles","CommentSection","post","classes","dispatch","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","commentsRef","handleComment","finalComment","result","name","newComment","_id","current","scrollIntoView","behavior","comentsOuterContainer","comentsInnerContainer","map","c","i","split","width","e","target","value","marginTop"],"sources":["C:/Users/user/OneDrive/Bureau/Mes projets/React/MERN-NOTE-APP-FINAL/New folder/client/src/components/PostDetails/CommentSection.jsx"],"sourcesContent":["import { Button, TextField, Typography } from \"@material-ui/core\"\r\nimport React, { useState, useRef } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { commentPost } from \"../../actions/posts\"\r\nimport useStyles from \"./style\"\r\n\r\nexport const CommentSection = ({ post }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [comments, setComments] = useState(post?.comments)\r\n  const [comment, setComment] = useState(\"\")\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"))\r\n  const commentsRef = useRef()\r\n\r\n  const handleComment = async () => {\r\n    const finalComment = `${user.result.name} : ${comment}`\r\n\r\n    const newComment = await dispatch(commentPost(finalComment, post._id))\r\n\r\n    setComment(\"\")\r\n    setComments(newComment)\r\n    // scroll down\r\n    commentsRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={classes.comentsOuterContainer}>\r\n          <div className={classes.comentsInnerContainer}>\r\n            <Typography gutterBottom variant='h6'>\r\n              Comments\r\n            </Typography>\r\n            {comments?.map((c, i) => (\r\n              <Typography key={i} gutterBottom variant='subtitle1'>\r\n                <strong> {c.split(\": \")[0]}</strong>\r\n                {c.split(\":\")[1]}\r\n              </Typography>\r\n            ))}\r\n            <div ref={commentsRef} />\r\n          </div>\r\n          {user?.result?.name && (\r\n            <div style={{ width: \"70%\" }}>\r\n              <Typography gutterBottom variant='h6'>\r\n                Write a Comment\r\n              </Typography>\r\n              <TextField fullWidth rows={4} variant='outlined' label='Comment' multiline value={comment} onChange={(e) => setComment(e.target.value)} />\r\n              <Button style={{ marginTop: \"10px\" }} color='primary' fullWidth disabled={!comment} variant='contained' onClick={handleComment}>\r\n                Comment\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,mBAAmB;AACjE,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,SAAS,MAAM,SAAS;AAAA;AAAA;AAE/B,OAAO,MAAMC,cAAc,GAAG,QAAc;EAAA;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACrC,MAAMC,OAAO,GAAGH,SAAS,EAAE;EAC3B,MAAMI,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,QAAQ,CAAC;EACxD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACxD,MAAMC,WAAW,GAAGjB,MAAM,EAAE;EAE5B,MAAMkB,aAAa,GAAG,YAAY;IAChC,MAAMC,YAAY,GAAI,GAAEP,IAAI,CAACQ,MAAM,CAACC,IAAK,MAAKX,OAAQ,EAAC;IAEvD,MAAMY,UAAU,GAAG,MAAMf,QAAQ,CAACL,WAAW,CAACiB,YAAY,EAAEd,IAAI,CAACkB,GAAG,CAAC,CAAC;IAEtEZ,UAAU,CAAC,EAAE,CAAC;IACdF,WAAW,CAACa,UAAU,CAAC;IACvB;IACAL,WAAW,CAACO,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC;EACD,oBACE;IAAA,uBACE;MAAA,uBACE;QAAK,SAAS,EAAEpB,OAAO,CAACqB,qBAAsB;QAAA,wBAC5C;UAAK,SAAS,EAAErB,OAAO,CAACsB,qBAAsB;UAAA,wBAC5C,QAAC,UAAU;YAAC,YAAY;YAAC,OAAO,EAAC,IAAI;YAAA,UAAC;UAEtC;YAAA;YAAA;YAAA;UAAA,QAAa,EACZpB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEqB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAClB,QAAC,UAAU;YAAS,YAAY;YAAC,OAAO,EAAC,WAAW;YAAA,wBAClD;cAAA,WAAQ,GAAC,EAACD,CAAC,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA,QAAU,EACnCF,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAAA,GAFDD,CAAC;YAAA;YAAA;YAAA;UAAA,QAInB,CAAC,eACF;YAAK,GAAG,EAAEd;UAAY;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACrB,EACL,CAAAL,IAAI,aAAJA,IAAI,uCAAJA,IAAI,CAAEQ,MAAM,iDAAZ,aAAcC,IAAI,kBACjB;UAAK,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAM,CAAE;UAAA,wBAC3B,QAAC,UAAU;YAAC,YAAY;YAAC,OAAO,EAAC,IAAI;YAAA,UAAC;UAEtC;YAAA;YAAA;YAAA;UAAA,QAAa,eACb,QAAC,SAAS;YAAC,SAAS;YAAC,IAAI,EAAE,CAAE;YAAC,OAAO,EAAC,UAAU;YAAC,KAAK,EAAC,SAAS;YAAC,SAAS;YAAC,KAAK,EAAEvB,OAAQ;YAAC,QAAQ,EAAGwB,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,eAC1I,QAAC,MAAM;YAAC,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAC,KAAK,EAAC,SAAS;YAAC,SAAS;YAAC,QAAQ,EAAE,CAAC3B,OAAQ;YAAC,OAAO,EAAC,WAAW;YAAC,OAAO,EAAEQ,aAAc;YAAA,UAAC;UAEhI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAEZ;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP,CAAC;AAAA,GAjDYd,cAAc;EAAA,QACTD,SAAS,EACRF,WAAW;AAAA;AAAA,KAFjBG,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}