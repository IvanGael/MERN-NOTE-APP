{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypes\";\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case CREATE:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          if (post._id === +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        })\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"sources":["C:/Users/user/OneDrive/Bureau/Mes projets/React/MERN-NOTE-APP-FINAL/New folder/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypes\"\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true }\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false }\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      }\r\n    case FETCH_BY_SEARCH:\r\n      return { ...state, posts: action.payload }\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload }\r\n    case LIKE:\r\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) }\r\n    case CREATE:\r\n      return { ...state, posts: [...state.posts, action.payload] }\r\n    case UPDATE:\r\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) }\r\n    case DELETE:\r\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) }\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id === +action.payload._id) {\r\n            return action.payload\r\n          }\r\n          return post\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,eAAe,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,QAAQ,0BAA0B;AAEpJ,gBAAe,YAAoD;EAAA,IAAnDC,KAAK,uEAAG;IAAEC,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,aAAa;MAChB,OAAO;QAAE,GAAGI,KAAK;QAAEC,SAAS,EAAE;MAAK,CAAC;IACtC,KAAKJ,WAAW;MACd,OAAO;QAAE,GAAGG,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAC;IACvC,KAAKX,SAAS;MACZ,OAAO;QACL,GAAGU,KAAK;QACRE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEJ,MAAM,CAACE,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEL,MAAM,CAACE,OAAO,CAACG;MAChC,CAAC;IACH,KAAKb,eAAe;MAClB,OAAO;QAAE,GAAGK,KAAK;QAAEE,KAAK,EAAEC,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAKP,UAAU;MACb,OAAO;QAAE,GAAGE,KAAK;QAAES,IAAI,EAAEN,MAAM,CAACE;MAAQ,CAAC;IAC3C,KAAKX,IAAI;MACP,OAAO;QAAE,GAAGM,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKlB,MAAM;MACT,OAAO;QAAE,GAAGS,KAAK;QAAEE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAK,EAAEC,MAAM,CAACE,OAAO;MAAE,CAAC;IAC9D,KAAKb,MAAM;MACT,OAAO;QAAE,GAAGQ,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAMA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO,CAACM,GAAG,GAAGR,MAAM,CAACE,OAAO,GAAGI,IAAK;MAAE,CAAC;IAClH,KAAKhB,MAAM;MACT,OAAO;QAAE,GAAGO,KAAK;QAAEE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACU,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,GAAG,KAAKR,MAAM,CAACE,OAAO;MAAE,CAAC;IACvF,KAAKN,OAAO;MACV,OAAO;QACL,GAAGC,KAAK;QACRE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,GAAG,CAAED,IAAI,IAAK;UAC/B,IAAIA,IAAI,CAACE,GAAG,KAAK,CAACR,MAAM,CAACE,OAAO,CAACM,GAAG,EAAE;YACpC,OAAOR,MAAM,CAACE,OAAO;UACvB;UACA,OAAOI,IAAI;QACb,CAAC;MACH,CAAC;IACH;MACE,OAAOT,KAAK;EAAA;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}